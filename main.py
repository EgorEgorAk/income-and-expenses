import os
from openpyxl import Workbook, load_workbook
from openpyxl.styles import Font, PatternFill
from datetime import datetime
from hide_token import TOKEN  # –£–±–µ–¥–∏—Å—å, —á—Ç–æ —Ñ–∞–π–ª hide_token.py —Å–æ–¥–µ—Ä–∂–∏—Ç TOKEN = "–≤–∞—à_—Ç–æ–∫–µ–Ω"
import telebot
from telebot import types

bot = telebot.TeleBot(TOKEN)
user_data = {}

# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=['start'])
def send_welcome(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton("–ó–∞–ø–∏—Å–∞—Ç—å –≤ —Ç–∞–±–ª–∏—Ü—É"))
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å.", reply_markup=markup)

# –ö–æ–º–∞–Ω–¥–∞ /help
@bot.message_handler(commands=['help'])
def send_help(message):
    bot.send_message(message.chat.id, "–ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏ '–ó–∞–ø–∏—Å–∞—Ç—å –≤ —Ç–∞–±–ª–∏—Ü—É' –∏ —Å–ª–µ–¥—É–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º üôÇ")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏
@bot.message_handler(func=lambda msg: msg.text == "–ó–∞–ø–∏—Å–∞—Ç—å –≤ —Ç–∞–±–ª–∏—Ü—É")
def start_input(message):
    chat_id = message.chat.id
    user_data[chat_id] = {}
    bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, 10.10.2025):")
    bot.register_next_step_handler(message, get_date)

def get_date(message):
    chat_id = message.chat.id
    user_data[chat_id]['date'] = message.text
    bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ —Ç–∏–ø (–¥–æ—Ö–æ–¥—ã –∏–ª–∏ —Ä–∞—Å—Ö–æ–¥—ã):")
    bot.register_next_step_handler(message, get_type)

def get_type(message):
    chat_id = message.chat.id
    user_data[chat_id]['type'] = message.text.strip().lower()
    bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ:")
    bot.register_next_step_handler(message, get_category)

def get_category(message):
    chat_id = message.chat.id
    user_data[chat_id]['category'] = message.text
    bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É (—Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ):")
    bot.register_next_step_handler(message, get_amount)

def get_amount(message):
    chat_id = message.chat.id
    try:
        amount = int(message.text)
    except ValueError:
        bot.send_message(chat_id, "‚ùó –û—à–∏–±–∫–∞: —Å—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —á–∏—Å–ª–æ–º! –ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞.")
        return

    user_data[chat_id]['amount'] = amount

    entries = [[
        user_data[chat_id]['date'],
        user_data[chat_id]['type'],
        user_data[chat_id]['category'],
        amount
    ]]

    income_expenses(entries, chat_id)
    bot.send_message(chat_id, "‚úÖ –î–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∞–Ω—ã! –§–∞–π–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.")

# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø–∏—Å–∏ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ Excel
def income_expenses(data, chat_id, filename="money.xlsx"):
    if os.path.exists(filename):
        wb = load_workbook(filename)
        ws = wb.active
    else:
        wb = Workbook()
        ws = wb.active
        ws.title = "–î–æ—Ö–æ–¥—ã –∏ –†–∞—Å—Ö–æ–¥—ã"
        ws['A1'] = datetime.now().strftime("–°–æ–∑–¥–∞–Ω–æ: %Y-%m-%d %H:%M:%S")
        ws.append([])
        ws.append(['–î–∞—Ç–∞', '–¢–∏–ø', '–ö–∞—Ç–µ–≥–æ—Ä–∏—è', '–°—É–º–º–∞'])
        for cell in ws[3]:
            cell.font = Font(bold=True)

    green_fill = PatternFill(start_color="C6EFCE", end_color="C6EFCE", fill_type="solid")
    red_fill = PatternFill(start_color="FFC7CE", end_color="FFC7CE", fill_type="solid")

    for row_data in data:
        ws.append(row_data)
        row_idx = ws.max_row
        fill = green_fill if row_data[1] == "–¥–æ—Ö–æ–¥—ã" else red_fill
        for cell in ws[row_idx]:
            cell.fill = fill

    # –ü–æ–¥—Å—á—ë—Ç –∏—Ç–æ–≥–æ–≤
    total_income = 0
    total_expense = 0

    for row in ws.iter_rows(min_row=4, min_col=2, max_col=4):
        type_cell = row[0].value
        amount_cell = row[2].value
        if isinstance(amount_cell, (int, float)):
            if type_cell == "–¥–æ—Ö–æ–¥—ã":
                total_income += amount_cell
            elif type_cell == "—Ä–∞—Å—Ö–æ–¥—ã":
                total_expense += amount_cell

    balance = total_income - total_expense

    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –∏—Ç–æ–≥–∏
    rows_to_delete = []
    for row in ws.iter_rows(min_row=4):
        value = str(row[0].value)
        if value.startswith("–ò—Ç–æ–≥–æ") or value.startswith("–û—Å—Ç–∞—Ç–æ–∫"):
            rows_to_delete.append(row[0].row)
    for row_idx in reversed(rows_to_delete):
        ws.delete_rows(row_idx)

    # –£–¥–∞–ª–µ–Ω–∏–µ –ø—É—Å—Ç—ã—Ö —Å—Ç—Ä–æ–∫
    for row in reversed(range(4, ws.max_row + 1)):
        if all(cell.value is None for cell in ws[row]):
            ws.delete_rows(row)

    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏—Ç–æ–≥–∏
    ws.append(["–ò—Ç–æ–≥–æ –¥–æ—Ö–æ–¥—ã:", "", "", total_income])
    ws.append(["–ò—Ç–æ–≥–æ —Ä–∞—Å—Ö–æ–¥—ã:", "", "", total_expense])
    ws.append(["–û—Å—Ç–∞—Ç–æ–∫:", "", "", balance])
    for i in range(3):
        for cell in ws[ws.max_row - i]:
            cell.font = Font(bold=True)

    wb.save(filename)

    # üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    with open(filename, 'rb') as f:
        bot.send_document(chat_id, f)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling(none_stop=True)